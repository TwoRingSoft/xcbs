#!/bin/sh

# failure modes
XCBS_EXIT_NO_PATH_PROVIDED=64
XCBS_EXIT_INVALID_XCODEPROJ_PATH=65
XCBS_EXIT_BUILD_SETTINGS_CHANGED=66

# path to the .xcodeproj from the command line
XCBS_PROJECT="${1}"

if [[ $XCBS_PROJECT == "--help" ]]; then
	echo
	echo "Usage: xcbs </path/to/.../your.xcodeproj>"
	echo
fi

if [[ $XCBS_PROJECT == "--version" ]]; then
	echo "\txcbs version 1.0.0"
fi

# make sure we got a path to the .xcodeproj
if [[ -z "${XCBS_PROJECT}" ]]; then
	echo "You must provide a path to your .xcodeproj file as an argument to xcbs."
	exit $XCBS_EXIT_NO_PATH_PROVIDED
fi

# if no xcode project file exists at $XCBS_PROJECT, stop. (-d checks if it's a directory)
if [[ ! -d "${XCBS_PROJECT}" ]]; then
	echo "${XCBS_PROJECT} is not a valid Xcode project. Make sure you have the correct path."
	exit $XCBS_EXIT_INVALID_XCODEPROJ_PATH
fi

# swap file separator characters to keep files with spaces in paths from breaking to two items as `find` output
OIFS="$IFS"
IFS=$'\n'

XCBS_SCHEMES=`find "${XCBS_PROJECT}"/xcshareddata -name "*.xcscheme"`
XCBS_CONFIGURATIONS=`xcodebuild -project "${XCBS_PROJECT}" -list | ruby scripts/list-configurations.rb`

XCBS_OUTPUT_PATH="${XCBS_PROJECT}/../.xcbs"
mkdir -p "${XCBS_OUTPUT_PATH}"

function unexpand_setting {
	XCBS_SETTING_NAME="${1}"
	XCBS_UNEXPANDED_OUTPUT_FILE="${2}"
	
	# awk grabs the line containing the setting definition
	# cut discards the leading whitespace, THE_BUILD_SETTING_NAME and the '=', leaving just the value
	XCBS_COMMAND="awk '{if (\$1 == \"${XCBS_SETTING_NAME}\") print \$0;}' \"${XCBS_UNEXPANDED_OUTPUT_FILE}\" | cut -d' ' -f7-"
	# echo "${XCBS_COMMAND}"
	XCBS_VALUE=`eval "${XCBS_COMMAND}"`
	
	if [[ -n "${XCBS_VALUE}" ]]; then
		
		# replace each instance of the build setting value with the name of the build setting itself, writing to a temp file
		XCBS_TEMP_UNEXPANDED_OUTPUT_FILE="${XCBS_UNEXPANDED_OUTPUT_FILE}.new"
		XCBS_COMMAND="sed \"s%${XCBS_VALUE}%${XCBS_SETTING_NAME}%g\" \"${XCBS_UNEXPANDED_OUTPUT_FILE}\" > \"${XCBS_TEMP_UNEXPANDED_OUTPUT_FILE}\""
		# echo "${XCBS_COMMAND}"
		eval "${XCBS_COMMAND}"
		
		# swap the temp file into the original file's place, overwriting it
		rm "${XCBS_UNEXPANDED_OUTPUT_FILE}"
		mv "${XCBS_TEMP_UNEXPANDED_OUTPUT_FILE}" "${XCBS_UNEXPANDED_OUTPUT_FILE}"
	else
		echo "No value to unexpand for \"${XCBS_SETTING_NAME}\" in ${XCBS_UNEXPANDED_OUTPUT_FILE}"
	fi
}

XCBS_EXIT_CODE=0

for XCBS_CONFIGURATION in ${XCBS_CONFIGURATIONS[@]}; do
	for XCBS_SCHEME_PATH in ${XCBS_SCHEMES[@]}; do

		# get the scheme name from the .xcscheme path. 
		# replace spaces in name with escape-quoted space characters, so that basename doesn't break them to new lines either
		XCBS_SCHEME_NAME=`echo "${XCBS_SCHEME_PATH}" | sed s/' '/'\"\ \"'/g | xargs basename | sed s/'.xcscheme'//g`

		# file we'll write the settings to: /path/to/.../.xcbs/<configuration>/<scheme-name>.build-settings.lock
		XCBS_OUTPUT_DIR="${XCBS_OUTPUT_PATH}/${XCBS_CONFIGURATION}"
		mkdir -p "${XCBS_OUTPUT_DIR}"
		XCBS_OUTPUT_FILE="${XCBS_OUTPUT_DIR}/${XCBS_SCHEME_NAME}.build-settings.lock"
		XCBS_TEMP_OUTPUT_FILE="${XCBS_OUTPUT_FILE}.new"

		# output the xcode build settings for the scheme/configuration
		xcrun xcodebuild -project "${XCBS_PROJECT}" -scheme "${XCBS_SCHEME_NAME}" -configuration "${XCBS_CONFIGURATION}" -showBuildSettings > "${XCBS_TEMP_OUTPUT_FILE}"

		# replace any user-specific paths with the variable name they were derived from
		XCBS_UNEXPANDED_SETTINGS=`cat lib/settings-to-unexpand`
		for XCBS_UNEXPANDED_SETTING in ${XCBS_UNEXPANDED_SETTINGS[@]}; do
			unexpand_setting "${XCBS_UNEXPANDED_SETTING}" "${XCBS_TEMP_OUTPUT_FILE}"
		done

		# if there's already a .lock file, see if any settings have changed; if so we'll return non-zero exit status at the end (-e checks if file exists)
		if [[ -e "${XCBS_OUTPUT_FILE}" ]]; then
			diff --brief "${XCBS_TEMP_OUTPUT_FILE}" "${XCBS_OUTPUT_FILE}" > /dev/null 2>&1
			XCBS_DIFF_RESULT=$?
			if [[ $XCBS_DIFF_RESULT -ne 0 ]]; then
				XCBS_EXIT_CODE=$XCBS_EXIT_BUILD_SETTINGS_CHANGED
			fi
			
			# remove the old lock file so we can move the new temp one into its place
			rm "${XCBS_OUTPUT_FILE}"
		fi

		# overwrite the existing files with the temporary ones
		mv "${XCBS_TEMP_OUTPUT_FILE}" "${XCBS_OUTPUT_FILE}"

	done
done

# replace the old file separator character
IFS="$OIFS"

exit $XCBS_EXIT_CODE
